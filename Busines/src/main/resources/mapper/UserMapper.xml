<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zdd.business.dao.UserMapperDao">
    <select id="findAll" resultType="com.zdd.pojo.entity.UserInfo">
        SELECT u.*,GROUP_CONCAT(e.`roleName`) roleNames FROM base_user u
                               LEFT JOIN base_user_role r ON u.`id`=r.`userId`
                               LEFT JOIN base_role e ON r.`roleId`=e.`id`
                              <where>

                                  <if test="likeUserName != null and likeUserName !='' ">
                                  and u.`userName` LIKE  concat("%",#{likeUserName},"%")
                              </if>
                                  <if test="sex != null and sex !=''  ">
                                      and   u.sex like concat("%",#{sex},"%")
                                  </if>
                                  <if test="end != null and end != ''">
                                      and u.createTime  <![CDATA[<=]]> #{end}
                                  </if>
                                  <if test="start !=null and start !='' ">
                                      and u.createTime >= #{start}
                                  </if>
                                  <if test="start != null and start != null and end != null and end != ''" >
                                      and  u.createTime between #{start} and #{end}
                                  </if>
                              </where>

                               GROUP BY u.`id`
    </select>
    <!-- @Param("likeUserName") String likeUserName,@Param("start")  String start,@Param("end")  String end, @Param("sex") String sex);-->

    <delete id="deleteOne">
        delete from base_user where id = #{id}
    </delete>


    <update id="updateOne">
        UPDATE base_user u SET u.`userName` =#{user.userName},
                               u.sex = #{user.sex},
                               u.loginName = #{user.loginName},
                               u.password = #{user.password},
                               u.tel = #{user.tel},
                               u.imgUrl = #{user.imgUrl}
        where u.id = #{user.id}
    </update>

    <insert id="insertOneUser">
        insert  into base_user(id,userName,loginName,password,sex,tel,imgUrl) values(#{user.id},#{user.userName},#{user.loginName},#{user.password},#{user.sex}, #{user.tel},#{user.imgUrl})
    </insert>

    <select id="selectAllRole" resultType="com.zdd.pojo.entity.RoleInfo">
          select * from `base_role`
    </select>

    <!--角色 -->
    <select id="selectAllRoleAndMenu" resultType="com.zdd.pojo.entity.RoleInfo">
        SELECT *FROM base_role
    </select>

    <select id="selectAllRoleAndMenuMids" resultType="com.zdd.pojo.entity.RoleInfo">
        SELECT GROUP_CONCAT(m.`id`)mids FROM base_role r
                          LEFT JOIN base_role_menu b ON r.`id`=b.`roleId`
                          LEFT JOIN base_menu m ON b.`menuId` = m.`id`
        WHERE m.`leval`=4 and     r.id =  #{id}
        GROUP BY r.`id`
    </select>

    <insert id="insertRoleAndUserCertont">
        INSERT INTO base_user_role(roleId,userId) VALUES(#{roleValue},#{id})
    </insert>

    <delete id="deleteOneRole">
        delete from `base_role` where id = #{id}
    </delete>

    <delete id="deleteOneRoleCentre">
        DELETE FROM base_role_menu  WHERE base_role_menu.`roleId` = #{id}
    </delete>


    <delete id="deleteRoleAndMenuAndCentre">
        DELETE	 FROM base_role_menu  WHERE base_role_menu.`roleId` = #{id}
    </delete>
    <insert id="insertRoleAndMenuAndCentre">
        insert into base_role_menu(id,roleId,menuId) values
        <foreach item="mids"  collection="mids"  separator=",">
            (null,#{id},#{mids})
        </foreach>
    </insert>


    <!--跟角色id 查询所有拥有的权限 -->
    <select id="findMenuByRoleId"  resultType="com.zdd.pojo.entity.MenuInfo">
        SELECT n.* FROM base_role r LEFT JOIN base_role_menu m ON r.id = m.roleId
                                    LEFT JOIN base_menu n ON m.menuId = n.id WHERE r.id = #{roleid} AND n.leval = #{leval}
    </select>

    <!--与上关联进行递归查询/传入roleid下的角色 -->
    <!-- @Param("leval") int i,@Param("parentid") Long id,@Param("roleid") Long roleids-->
    <select id="getfindChildMenuByRoleId"  resultType="com.zdd.pojo.entity.MenuInfo">
        SELECT n.* FROM base_role r LEFT JOIN base_role_menu m ON r.id = m.roleId
                                    LEFT JOIN base_menu n ON m.menuId = n.id WHERE r.id = #{roleid} AND n.leval = #{leval} AND n.parentId = #{parentid}
    </select>

    <!--全查权限 等级为1 -->
    <select id="findMenu" resultType="com.zdd.pojo.entity.MenuInfo">
        SELECT * FROM base_menu m WHERE m.`leval` =#{leave}
    </select>

    <!-- 与上sql关联/进行递归查询-->
    <select id="getChildMenu"   resultType="com.zdd.pojo.entity.MenuInfo">
        SELECT * FROM base_menu m WHERE m.`leval` =#{leave} AND m.`parentId`=#{parentid}
    </select>

    <insert id="insertMenu">
        INSERT INTO base_menu(menuName,url,leval,parentId) values(#{menuName},#{url},#{leval},#{parentid})
    </insert>

    <!--updateMenu(@Param("id") long id, @Param("menuName") String menuName, @Param("url") String url, @Param("leval")int leval); -->
    <update id="updateMenu">
        UPDATE base_menu m SET m.menuName = #{menuName},
                              m.url = #{url},
                               m.leval=#{leval}
              where m.id  = #{id}
    </update>

    <delete id="deleteMenu">
        delete from base_menu where id = #{id}
    </delete>

    <delete id="deleteMenuCentre">
        delete from base_role_menu where menuId = #{id}
    </delete>

    <!-- 删除角色时候查询该角色是否还在关联这用户-->
    <select id="findRoleInUser" resultType="com.zdd.pojo.entity.UserInfo">
        SELECT u.userName userName FROM base_user u LEFT JOIN base_user_role r ON u.`id`=r.`userId`
                        LEFT JOIN base_role e ON e.`id` = r.`roleId` WHERE e.`id`=#{id}
    </select>



    <!-- 删除权限时候查询该权限是否还在关联这角色-->
    <select id="findMenuInRole"  resultType="com.zdd.pojo.entity.RoleInfo">
        SELECT e.`roleName`  roleName FROM base_menu m LEFT JOIN base_user_role r ON m.`id`=r.`userId`
                                  LEFT JOIN base_role e ON e.`id` = r.`roleId` WHERE m.`id`=#{id}
    </select>
    
    <!--这是一个用户和角色关联查询的sql、主要查询角色的等级，id，名称 -->
    <select id="findRoleByUserId" resultType="com.zdd.pojo.entity.UserInfo">
        SELECT o.`id` roleids,o.`roleName`  roleNames,o.`leval` leval FROM base_user u
              LEFT JOIN base_user_role r ON u.`id` = r.`userId`
              LEFT JOIN base_role o ON r.`roleId` = o.`id` WHERE u.`id` =#{id}
    </select>
    <!--insertOneRole(@Param("roleName") String roleName,@Param("roleName") String miaoShu,@Param("leval") int leval,@Param("roleids") long roleids); -->
    <insert id="insertOneRole">
        insert into `base_role`(roleName,miaoShu,leval,parentid) values(#{roleName},#{miaoShu},#{leval}+1,#{parentid})
    </insert>

    <!--找回密码-->
    <select id="findUserByLoginName" resultType="com.zdd.pojo.entity.UserInfo">
          select * from base_user where loginName = #{loginName}
    </select>
    <select id="findUserByEmail" resultType="com.zdd.pojo.entity.UserInfo">
        select * from base_user where email = #{email}
    </select>
    <update id="updatePasswordByLoginName">
        update base_user set password = #{password} where loginName = #{loginName}
    </update>
</mapper>